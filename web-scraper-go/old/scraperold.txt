package main

import (
	"encoding/json"
	"fmt"
	"log"
	"os"

	"github.com/gocolly/colly"
)

// initializing a data structure to keep the scraped data
type item struct {
	Name   string `json:"name"`
	Price  string `json:"price"`
	ImgUrl string `json:"imgurl"`
}

func main() {

	client := bright_proxy()

	//Colly Scraping

	c := colly.NewCollector()

	c.WithTransport(client.Transport)

	var items []item

	c.OnHTML("div.sg-col-4-of-24.sg-col-4-of-12.s-result-item.s-asin.sg-col-4-of-16.sg-col.s-widget-spacing-small.sg-col-4-of-20", func(h *colly.HTMLElement) {

		item := item{
			Name:   h.ChildText("span.a-size-base-plus.a-color-base.a-text-normal"),
			Price:  h.ChildText("span.a-price-whole"),
			ImgUrl: h.ChildAttr("img.s-image", "src"),
		}

		items = append(items, item)

		fmt.Println(item)

	})

	// c.OnHTML("a.next.page-numbers", func(h *colly.HTMLElement) {
	// 	next_page := h.Request.AbsoluteURL(h.Attr("href"))
	// 	c.Visit(next_page)
	// })

	c.OnRequest(func(r *colly.Request) {
		r.Headers.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36")
		r.Headers.Set("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8")
		r.Headers.Set("Accept-Language", "en-US,en;q=0.9")
		
	})

	err := c.Visit("https://www.amazon.fr/s?k=playstation+5+ps5+console")
	if err != nil {
		log.Fatal("error:", err)
	}

	

	// fmt.Println(items)

	content, err := json.Marshal(items)
	if err != nil {
		fmt.Println(err.Error())
	}

	err = os.WriteFile("text_ps5.json", content, 0644)
	if err != nil {
		log.Fatal("Failed to write file:", err)
	}

}
